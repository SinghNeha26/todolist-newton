{"version":3,"sources":["assets/images/logo.png","component/Header.jsx","component/Tasks.jsx","component/Sidebar.jsx","component/Content.jsx","App.jsx","index.js"],"names":["Header","className","src","logo","alt","FORMAT","formatDate","date","format","locale","dateFnsFormat","AddTasks","onCancel","onAddTask","useState","task","setTask","setDate","value","onChange","event","target","onClick","onDayChange","day","placeholder","Date","dayPickerProps","modifiers","disabled","before","TASKS_HEADER_MAPPING","INBOX","TODAY","NEXT_7","TaskItem","selectedTab","tasks","tasksToRender","filter","isAfter","isBefore","addDays","isToday","map","text","Tasks","showAddTask","setShowAddTask","setTasks","prevState","newTaskItem","length","Sidebar","setSelectedTab","console","log","Content","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3b7756f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.82915fe4.png\";","import React from \"react\";\r\nimport logo from \"../assets/images/logo.png\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <nav>\r\n                <div className=\"logo\">\r\n                    <img src={logo} alt=\"Todolist\"></img>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport dateFnsFormat from \"date-fns/format\";\r\nimport isAfter from \"date-fns/isAfter\";\r\nimport isBefore from \"date-fns/isBefore\";\r\nimport addDays from \"date-fns/addDays\";\r\nimport isToday from \"date-fns/isToday\";\r\n\r\nconst FORMAT = \"dd/MM/yyyy\";\r\nfunction formatDate(date, format, locale) {\r\n    return dateFnsFormat(date, format, { locale });\r\n}\r\nconst AddTasks = ({ onCancel, onAddTask }) => {\r\n    const [task, setTask] = useState(\"\");\r\n    const [date, setDate] = useState(null);\r\n    return (\r\n        <div className=\"add-task-dialog\">\r\n            <input value={task} onChange={(event) => setTask(event.target.value)} />\r\n            <div className=\"add-task-actions-container\">\r\n                <div className=\"btns-container\">\r\n                    <button className=\"add-btn\"\r\n                        onClick={() => {\r\n                            onAddTask(task, date);\r\n                            onCancel();\r\n                            setTask(\"\");\r\n                        }}>Add Task</button>\r\n                    <button className=\"cancel-btn\"\r\n                        onClick={() => {\r\n                            onCancel();\r\n                            setTask(\"\");\r\n                        }}>\r\n                        Cancel</button>\r\n                </div>\r\n                <div className=\"icon-container\">\r\n                    <DayPickerInput\r\n                        onDayChange={(day) => setDate(day)}\r\n                        placeholder={`${dateFnsFormat(new Date(), FORMAT)}`}\r\n                        formatDate={formatDate}\r\n                        format={FORMAT} dayPickerProps={{\r\n                            modifiers: {\r\n                                disabled: [{ before: new Date() }],\r\n                            },\r\n                        }} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst TASKS_HEADER_MAPPING = {\r\n    INBOX: \"Inbox\",\r\n    TODAY: \"Today\",\r\n    NEXT_7: \"Next 7 days\",\r\n};\r\nconst TaskItem = ({ selectedTab, tasks }) => {\r\n    let tasksToRender = [...tasks];\r\n    if (selectedTab === \"NEXT_7\") {\r\n        tasksToRender = tasksToRender.filter(\r\n            (task) =>\r\n                isAfter(task.date, new Date()) &&\r\n                isBefore(task.date, addDays(new Date(), 7))\r\n        );\r\n    }\r\n    if (selectedTab === \"TODAY\") {\r\n        tasksToRender = tasksToRender.filter((task) => isToday(task.date));\r\n    }\r\n    return (\r\n        <div className=\"task-items-container\">\r\n            {tasksToRender.map((task) => (\r\n                <div className=\"task-item\">\r\n                    {/* <p>{task.text}</p> */}\r\n                    <p>{task.text}{dateFnsFormat(new Date(task.date), FORMAT)}{\" \"}</p>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\nconst Tasks = ({ selectedTab }) => {\r\n    const [showAddTask, setShowAddTask] = useState(false);\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n    const addNewTask = (text, date) => {\r\n        const newTaskItem = { text, date: date || new Date() };\r\n        setTasks((prevState) => [...prevState, newTaskItem]);\r\n    };\r\n    return (\r\n        <div className=\"tasks\">\r\n            <h1>{TASKS_HEADER_MAPPING[selectedTab]}</h1>\r\n            {selectedTab === \"INBOX\" ? (\r\n                <div className=\"add-task-btn\"\r\n                    onClick={() => setShowAddTask((prevState) => !prevState)}>\r\n                    <spna className=\"plus\">+</spna>\r\n                    <spna className=\"add-task-text\">Add Task</spna>\r\n                </div>\r\n            ) : null}\r\n            {showAddTask && (\r\n                <AddTasks\r\n                    onAddTask={addNewTask}\r\n                    onCancel={() => setShowAddTask(false)} />\r\n            )}\r\n            {tasks.length > 0 ? (<TaskItem tasks={tasks} selectedTab={selectedTab} />\r\n            ) : (\r\n                <p>No tasks yet</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport { FaInbox, FaRegCalendarAlt, FaRegCalendar } from \"react-icons/fa\"\r\n\r\nconst Sidebar = ({ selectedTab, setSelectedTab }) => {\r\n    console.log({ selectedTab });\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className={selectedTab === \"INBOX\" ? \"active\" : \"\"}\r\n                onClick={() => setSelectedTab(\"INBOX\")}>\r\n                <FaInbox className=\"icon\" />\r\n                Inbox\r\n            </div>\r\n            <div className={selectedTab === \"TODAY\" ? \"active\" : \"\"}\r\n                onClick={() => setSelectedTab(\"TODAY\")}>\r\n                <FaRegCalendarAlt className=\"icon\" />\r\n                Today\r\n\r\n            </div>\r\n            <div className={selectedTab === \"NEXT_7\" ? \"active\" : \"\"}\r\n                onClick={() => setSelectedTab(\"NEXT_7\")}>\r\n                <FaRegCalendar className=\"icon\" />\r\n                Next 7 days\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from \"react\";\r\nimport Tasks from \"./Tasks\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nconst Content = () => {\r\n    const [selectedTab, setSelectedTab] = useState(\"INBOX\");\r\n    return (\r\n        <section className=\"content\">\r\n            <Sidebar selectedTab={selectedTab} setSelectedTab={setSelectedTab} />\r\n            <Tasks selectedTab={selectedTab} setSelectedTab={setSelectedTab} />\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport Header from \"./component/Header\";\r\nimport Content from \"./component/Content\";\r\nimport \"./App.scss\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Header />;\r\n            <Content />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}